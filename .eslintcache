[{"C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\index.js":"1","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\Auth.js":"2","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\App.js":"3","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\firebase.js":"4","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\PrivateRoute.js":"5","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\Details.jsx":"6","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\Favourites.jsx":"7","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\Main.jsx":"8","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\account\\Account.jsx":"9","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\MainCards.jsx":"10","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\account\\Login.jsx":"11","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\API.js":"12","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\Liked.jsx":"13","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\Card.jsx":"14"},{"size":355,"mtime":1608427672591,"results":"15","hashOfConfig":"16"},{"size":573,"mtime":1608426587880,"results":"17","hashOfConfig":"16"},{"size":970,"mtime":1608426587855,"results":"18","hashOfConfig":"16"},{"size":326,"mtime":1608426587905,"results":"19","hashOfConfig":"16"},{"size":618,"mtime":1608426587988,"results":"20","hashOfConfig":"16"},{"size":4835,"mtime":1608426618720,"results":"21","hashOfConfig":"16"},{"size":153,"mtime":1608426618725,"results":"22","hashOfConfig":"16"},{"size":2850,"mtime":1608426618706,"results":"23","hashOfConfig":"16"},{"size":1568,"mtime":1608426618713,"results":"24","hashOfConfig":"16"},{"size":3175,"mtime":1608426618729,"results":"25","hashOfConfig":"16"},{"size":9073,"mtime":1608426618715,"results":"26","hashOfConfig":"16"},{"size":743,"mtime":1608426587808,"results":"27","hashOfConfig":"16"},{"size":1505,"mtime":1608426618727,"results":"28","hashOfConfig":"16"},{"size":918,"mtime":1608426618718,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hcw31r",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\index.js",[],"C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\Auth.js",[],["65","66"],"C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\App.js",[],"C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\firebase.js",["67"],"import firebase from \"@firebase/app\";\r\nimport \"@firebase/auth\";\r\nimport \"@firebase/firestore\";\r\nimport { firebaseAPI } from \"./API\";\r\n\r\nconst config = firebaseAPI;\r\nexport const app =\r\n  firebase.apps.length > 0 ? \"\" : firebase.initializeApp(config);\r\n\r\nexport const db = firebase.firestore();\r\n\r\nexport default { app, db };\r\n","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\PrivateRoute.js",[],"C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\Details.jsx",["68","69"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Container, Card, Col, Row, Button, Toast } from \"react-bootstrap\";\r\nimport { movieAPI as API } from \"../../API\";\r\nimport { useParams, useHistory, withRouter } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport { AuthContext } from \"../../Auth\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Main from \"../Main\";\r\nconst Details = (props) => {\r\n  const history = useHistory();\r\n  const [mov, setMov] = useState([]);\r\n  const { id } = useParams();\r\n  const { currentUser } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    fetch(`${API.details}${id}?api_key=${API.key}&language=en-US`)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n        setMov(res);\r\n      });\r\n    if (currentUser !== null) {\r\n      const collectionRef = db\r\n        .collection(\"liked\")\r\n        .doc(currentUser)\r\n        .collection(\"likes\")\r\n        .doc(id);\r\n      collectionRef.get().then((docSnapshot) => {\r\n        if (docSnapshot.exists) {\r\n          setDisplayLike(false);\r\n          console.log(\"exists\");\r\n          setUnLike(true);\r\n        } else {\r\n          setDisplayLike(true);\r\n        }\r\n      });\r\n    }\r\n  }, [id]);\r\n\r\n  const [displayLike, setDisplayLike] = useState(true);\r\n  const back = (e) => {\r\n    e.preventDefault();\r\n    history.goBack();\r\n  };\r\n\r\n  const addLike = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"clicked like\");\r\n    try {\r\n      const collectionRef = db\r\n        .collection(\"liked\")\r\n        .doc(currentUser)\r\n        .collection(\"likes\")\r\n        .doc(id);\r\n      collectionRef.set({ title: mov.title, id });\r\n      toast.success(\"Liked\");\r\n      setDisplayLike(false);\r\n      setUnLike(true);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  const removeLike = (e) => {\r\n    const collectionRef = db\r\n      .collection(\"liked\")\r\n      .doc(currentUser)\r\n      .collection(\"likes\")\r\n      .doc(id);\r\n    collectionRef.delete().then(() => {\r\n      setUnLike(false);\r\n      setDisplayLike(true);\r\n      toast.info(\"Like Removed\");\r\n    });\r\n  };\r\n  const [unLike, setUnLike] = useState(false);\r\n  return (\r\n    <>\r\n      <Main />\r\n      <Container>\r\n        <Card\r\n          className=\"bg-dark m-5 text-info text-left mx-auto\"\r\n          style={{ maxWidth: \"90vw\" }}\r\n        >\r\n          <Card.Img\r\n            src={`${API.image}${mov.poster_path}`}\r\n            className=\"p-1 border border-white\"\r\n          />\r\n          <Card.Body>\r\n            <Card.Title className=\"text-center border-bottom border-secondary p-1\">\r\n              {mov.title}\r\n            </Card.Title>\r\n            <Card.Text className=\"border-bottom border-secondary p-1 m-1\">\r\n              {mov.overview}\r\n            </Card.Text>\r\n\r\n            <Card.Text>\r\n              <Row>\r\n                <Col className=\"border-secondary border-left p-1\">\r\n                  <p>Companies:</p>\r\n                  <p>\r\n                    {mov.production_companies?.map((item) => {\r\n                      return <p>{item.name}</p>;\r\n                    })}\r\n                  </p>\r\n                </Col>\r\n                <Col className=\"border-secondary border-left p-1\">\r\n                  <p>Genres:</p>\r\n                  <p>\r\n                    {mov.genres?.map((item) => {\r\n                      return <p>{item.name}</p>;\r\n                    })}\r\n                  </p>\r\n                </Col>\r\n                <Col className=\"border-secondary border-left border-right p-1\">\r\n                  <p>Languages:</p>\r\n                  <p>\r\n                    {mov.spoken_languages?.map((item) => {\r\n                      return <p>{item.name}</p>;\r\n                    })}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <Button variant=\"outline-warning\" className=\"m-3\" onClick={back}>\r\n              Back\r\n            </Button>\r\n            {!!displayLike ? (\r\n              <Button\r\n                variant=\"outline-success\"\r\n                name={id}\r\n                onClick={addLike}\r\n                className=\"m-3\"\r\n              >\r\n                Like\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {!!unLike ? (\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                name={id}\r\n                onClick={removeLike}\r\n                className=\"m-3\"\r\n              >\r\n                Unlike\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Card.Footer>\r\n        </Card>\r\n        <ToastContainer />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(Details);\r\n","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\Favourites.jsx",[],"C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\Main.jsx",["70"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { Card, Button, Container, Row } from \"react-bootstrap\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth\";\r\nimport { app } from \"../firebase\";\r\nconst Main = (props) => {\r\n  const history = useHistory();\r\n  const pageChange = (e) => {\r\n    e.preventDefault();\r\n    switch (e.target.name) {\r\n      case \"logOut\":\r\n        const out = async () => {\r\n          try {\r\n            setLoggedIn(false);\r\n            await app.auth().signOut();\r\n          } catch (error) {\r\n            setLoggedIn(true);\r\n            console.log(error.message);\r\n          }\r\n        };\r\n        out();\r\n        break;\r\n      case \"logIn\":\r\n        history.push(\"/login\");\r\n        break;\r\n      default:\r\n        history.push(e.target.name);\r\n    }\r\n  };\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setLoggedIn(true);\r\n    }\r\n  }, []);\r\n  return (\r\n    <Container className=\"mx-5 mx-auto\">\r\n      <Row>\r\n        <Card className=\"bg-dark border border-info m-5 text-info w-100 mx-auto\">\r\n          <Card.Body>\r\n            <Card.Text>\r\n              <Button\r\n                variant=\"outline-info\"\r\n                name=\"\"\r\n                onClick={pageChange}\r\n                className=\"m-3\"\r\n              >\r\n                Home\r\n              </Button>\r\n              {loggedIn ? (\r\n                <>\r\n                  <Button\r\n                    variant=\"outline-info\"\r\n                    name=\"account\"\r\n                    onClick={pageChange}\r\n                    className=\"m-3\"\r\n                  >\r\n                    Account\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"outline-info\"\r\n                    name=\"favourites\"\r\n                    onClick={pageChange}\r\n                    className=\"m-3\"\r\n                  >\r\n                    Favourites\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              {loggedIn ? (\r\n                <Button\r\n                  variant=\"outline-info\"\r\n                  name=\"logOut\"\r\n                  onClick={pageChange}\r\n                  className=\"m-3\"\r\n                >\r\n                  Log Out\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"outline-info\"\r\n                  name=\"logIn\"\r\n                  onClick={pageChange}\r\n                  className=\"m-3\"\r\n                >\r\n                  Log In\r\n                </Button>\r\n              )}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Main);\r\n","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\account\\Account.jsx",["71","72","73","74"],"import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport { Container, Col, Row, Card, Button, CardDeck } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { db } from \"../../firebase\";\r\nimport { AuthContext } from \"../../Auth\";\r\n\r\nconst Account = (props) => {\r\n  const [userInfo, setUserInfo] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\"\r\n  });\r\n  const { currentUser } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    try {\r\n      db.collection(\"users\")\r\n        .doc(currentUser)\r\n        .get()\r\n        .then((snapShot) => {\r\n          const user = snapShot.data();\r\n          const { firstName, lastName, email } = user;\r\n          setUserInfo({\r\n            firstName,\r\n            lastName,\r\n            email\r\n          });\r\n        });\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Card className=\"bg-dark text-warning\">\r\n        <Card.Header>\r\n          <Card.Title className=\"m-3\">Account Info</Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Card.Text className=\"text-left\">\r\n            <Row>\r\n              <p className=\"mx-3\">Name:</p>\r\n              <p>\r\n                {userInfo.firstName} {userInfo.lastName}\r\n              </p>\r\n            </Row>\r\n            <Row>\r\n              <p className=\"mx-3\">Email:</p>\r\n              <p>{userInfo.email}</p>\r\n            </Row>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Account);\r\n","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\MainCards.jsx",[],"C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\account\\Login.jsx",[],"C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\API.js",["75"],"export const movieAPI = {\r\n  key: process.env.REACT_APP_MOVIE_API_KEY,\r\n  movie: process.env.REACT_APP_MOVIE_API_MOVIE,\r\n  image: process.env.REACT_APP_MOVIE_API_IMAGE,\r\n  details: process.env.REACT_APP_MOVIE_API_DETAILS,\r\n  search: process.env.REACT_APP_MOVIE_API_SEARCH,\r\n};\r\n\r\nexport const firebaseAPI = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING,\r\n  appId: process.env.REACT_APP_FIREBASE_APP,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT,\r\n};\r\n\r\nexport default { movieAPI, firebaseAPI };\r\n","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\Liked.jsx",["76","77"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport SingleCard from \"./Card\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { movieAPI as API } from \"../../API\";\r\nimport { db } from \"../../firebase\";\r\nimport { AuthContext } from \"../../Auth\";\r\nconst Liked = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [cardsDisplay, setCardsDisplay] = useState([]);\r\n  useEffect(() => {\r\n    // get firebase likes\r\n    const likes = [];\r\n    const likesRef = db\r\n      .collection(\"liked\")\r\n      .doc(currentUser)\r\n      .collection(\"likes\");\r\n    const refCollect = async () => {\r\n      await likesRef.get().then((snap) => {\r\n        snap.docs.forEach((doc) => {\r\n          likes.push(doc.data().id);\r\n        });\r\n      });\r\n      console.log(likes);\r\n      likes.map((item) => {\r\n        fetch(`${API.details}${item}?api_key=${API.key}&language=en-US`)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            console.log(res);\r\n            setCardsDisplay((state) => [...state, res]);\r\n          });\r\n      });\r\n    };\r\n    refCollect();\r\n\r\n    // get likes into cardData\r\n    /*\r\n\r\n    */\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      {cardsDisplay.map((card) => {\r\n        return (\r\n          <SingleCard\r\n            title={card.title}\r\n            img={`${API.image}${card.backdrop_path}`}\r\n            key={card.id}\r\n            id={card.id}\r\n          />\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Liked;\r\n","C:\\Users\\jerem\\Desktop\\apps\\moviedir\\src\\components\\views\\Card.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":12,"column":1,"nodeType":"84","endLine":12,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":2,"column":45,"nodeType":"87","messageId":"88","endLine":2,"endColumn":50},{"ruleId":"89","severity":1,"message":"90","line":38,"column":6,"nodeType":"91","endLine":38,"endColumn":10,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"90","line":39,"column":6,"nodeType":"91","endLine":39,"endColumn":8,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"94","line":3,"column":21,"nodeType":"87","messageId":"88","endLine":3,"endColumn":24},{"ruleId":"85","severity":1,"message":"95","line":3,"column":37,"nodeType":"87","messageId":"88","endLine":3,"endColumn":43},{"ruleId":"85","severity":1,"message":"96","line":3,"column":45,"nodeType":"87","messageId":"88","endLine":3,"endColumn":53},{"ruleId":"89","severity":1,"message":"90","line":32,"column":6,"nodeType":"91","endLine":32,"endColumn":8,"suggestions":"97"},{"ruleId":"82","severity":1,"message":"83","line":19,"column":1,"nodeType":"84","endLine":19,"endColumn":42},{"ruleId":"98","severity":1,"message":"99","line":25,"column":24,"nodeType":"100","messageId":"101","endLine":25,"endColumn":26},{"ruleId":"89","severity":1,"message":"90","line":40,"column":6,"nodeType":"91","endLine":40,"endColumn":8,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Toast' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.","ArrayExpression",["105"],["106"],"'Col' is defined but never used.","'Button' is defined but never used.","'CardDeck' is defined but never used.",["107"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"111","fix":"113"},{"desc":"111","fix":"114"},"Update the dependencies array to be: [currentUser, id]",{"range":"115","text":"116"},"Update the dependencies array to be: [currentUser]",{"range":"117","text":"118"},{"range":"119","text":"118"},{"range":"120","text":"118"},[1305,1309],"[currentUser, id]",[1049,1051],"[currentUser]",[875,877],[1162,1164]]